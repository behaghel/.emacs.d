#!/usr/bin/env bash
set -euo pipefail

shopt -s nullglob

files=("$@")
if [ ${#files[@]} -eq 0 ]; then
  exit 0
fi

status=0
for f in "${files[@]}"; do
  case "$f" in
    *.el)
      msg=$(emacs --batch "$f" -l checkdoc \
        --eval "(let ((file \"$f\")) (with-current-buffer (find-file-noselect file) (condition-case _ (checkdoc-current-buffer t) (wrong-number-of-arguments (checkdoc-current-buffer)))))" \
        2>&1 || true)
      # Filter out header/footer structural warnings that conflict with our module naming
      filtered=$(printf "%s\n" "$msg" \
        | sed '/The first line should be of the form/d' \
        | sed '/You should have a summary line/d' \
        | sed '/You should have a section marked ;;; Commentary:/d' \
        | sed '/You should have a section marked ;;; Code:/d' \
        | sed '/The footer should be/d' \
        | sed '/^Loading /d' \
        | sed '/^\s*$/d' \
        | sed '/^Warning (emacs): *$/d')
      if [ -n "$filtered" ]; then
        status=1
        echo "checkdoc warnings in $f:" >&2
        echo "$filtered" >&2
      fi
      ;;
    *) ;;
  esac
done

if [ $status -ne 0 ]; then
  echo "Pre-commit failed: checkdoc warnings above." >&2
fi

exit $status
