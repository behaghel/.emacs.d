name: Emacs configuration test

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  load-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Emacs
        run: |
          sudo apt-get update
          sudo apt-get install -y emacs-nox

      - name: Cache straight.el and eln-cache
        id: straight-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/straight/repos
            ${{ github.workspace }}/straight/build
            ${{ github.workspace }}/eln-cache
          key: straight-${{ runner.os }}-${{ hashFiles('core/packages.el', 'docs/config.org', 'settings/**/*.el') }}
          restore-keys: |
            straight-${{ runner.os }}-

      - name: Report cache status (pre-run)
        run: |
          echo "Cache hit: ${{ steps.straight-cache.outputs.cache-hit }}"
          for d in straight/repos straight/build eln-cache; do
            p="${{ github.workspace }}/$d"
            if [ -d "$p" ]; then
              du -sh "$p" || true
            else
              echo "Missing: $d"
            fi
          done

      - name: Pre-commit checks (elisp format + checkdoc)
        run: |
          export HOME=$GITHUB_WORKSPACE
          chmod +x scripts/elisp-format scripts/elisp-checkdoc
          mapfile -t el_files < <(git ls-files "*.el")
          if [ ${#el_files[@]} -gt 0 ]; then
            ./scripts/elisp-format "${el_files[@]}"
            ./scripts/elisp-checkdoc "${el_files[@]}"
          fi

      - name: Tangle literate config
        run: |
          emacs --batch -l org --eval '(org-babel-tangle-file "docs/config.org")'

      - name: Load init file
        run: |
          export HOME=$GITHUB_WORKSPACE
          emacs --batch -l init.el --eval '(message "Loaded init.el")' --kill

      - name: Run ERT smoke tests
        run: |
          export HOME=$GITHUB_WORKSPACE
          emacs --batch -l ert -l test/smoke.el -f ert-run-tests-batch-and-exit

      - name: Report cache status (post-run)
        if: always()
        run: |
          for d in straight/repos straight/build eln-cache; do
            p="${{ github.workspace }}/$d"
            if [ -d "$p" ]; then
              du -sh "$p" || true
            else
              echo "Missing: $d"
            fi
          done
